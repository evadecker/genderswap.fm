---
import BaseLayout from "../../layouts/BaseLayout.astro";
import SongDetails from "../../components/SongDetails.astro";
import { supabase } from "../../lib/supabase";
import Tag from "../../components/Tag.astro";
import Stack from "../../components/Stack.astro";
import dayjs from "dayjs";

const { slug } = Astro.params;

const { data } = await supabase
  .from("covers")
  .select()
  .eq("slug", slug)
  .single();

const { data: original } = await supabase
  .from("songs")
  .select()
  .eq("id", data.original)
  .single();

const { data: cover } = await supabase
  .from("songs")
  .select()
  .eq("id", data.cover)
  .single();

const { tags, created_at } = data;

let coveredAs;
if (original?.name !== cover?.name) {
  coveredAs = cover?.name;
}

const formattedDate = dayjs(created_at).format("MMMM D, YYYY");
---

<BaseLayout title="Placeholder" description="Placeholder">
  <header class="header">
    <h1 class="title">{original?.name}</h1>
    {
      tags && (
        <div class="tags">
          <Stack>
            {tags.map((tag: string) => (
              <div class="tag">
                <Tag text={tag} />
              </div>
            ))}
          </Stack>
        </div>
      )
    }
  </header>
  <div class="compare">
    <SongDetails type="original" song={original} />
    <SongDetails type="cover" song={cover} coveredAs={coveredAs} />
  </div>
  <footer class="footer">
    <span>Added <time datetime={created_at}>{formattedDate}</time></span>
  </footer>
</BaseLayout>

<style lang="scss">
  .header {
    padding-block-start: var(--space-xl);
    padding-block-end: var(--space-2xl);
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .title {
    margin-block-end: var(--space-s);
  }

  .compare {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
  }

  .footer {
    padding-block: var(--space-2xl);
    display: flex;
    flex-direction: column;
    align-items: center;
  }
</style>
