---
import Icon from "./Icon.astro";
import Logo from "./Logo.astro";
---

<script>
  import { mauve, mauveDark } from "@radix-ui/colors";

  type Theme = "light" | "dark";

  const lightToggle = document.querySelector("[data-theme-toggle-light]");
  const darkToggle = document.querySelector("[data-theme-toggle-dark]");

  const setActiveTheme = (theme: Theme) => {
    // Update class on body
    document.body.classList.remove("light", "dark");
    document.body.classList.add(theme);

    // Update class on toggle
    if (theme === "light") {
      lightToggle?.classList.add("active");
      darkToggle?.classList.remove("active");
    } else {
      lightToggle?.classList.remove("active");
      darkToggle?.classList.add("active");
    }

    // Update localStorage
    window.localStorage.setItem("theme", theme);

    // Update meta theme
    const metaTheme = document.querySelector('meta[name="theme-color"]');
    if (metaTheme !== null)
      metaTheme.setAttribute(
        "content",
        theme === "dark" ? mauveDark.mauve1 : mauve.mauve1
      );
  };

  lightToggle?.addEventListener("click", () => setActiveTheme("light"));
  darkToggle?.addEventListener("click", () => setActiveTheme("dark"));
</script>

<header transition:persist>
  <div class="container">
    <Logo />
    <nav>
      <a href="/new" class="button">
        <Icon icon="add" />
         Submit a cover</a
      >
    </nav>
  </div>
</header>

<style lang="scss">
  header {
    width: 100%;
    position: sticky;
    top: 0;
    z-index: 1000;
    padding-inline-start: var(--space-m);
    padding-inline-end: var(--space-m);
  }

  .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--space-s) 0;
  }

  nav {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-s);
  }

  .button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2xs);
    background: var(--mauve-12);
    color: var(--mauve-1);
    line-height: 1;
    font-weight: var(--font-weight-bold);
    padding-block: var(--space-xs);
    padding-inline: var(--space-xs) var(--space-m);
    border-radius: var(--radius-full);
    border: none;

    &:hover {
      background: var(--violet-9);
      color: white;
    }

    &:focus {
      outline: 3px solid var(--violet-a9);
      outline-offset: 3px;
    }
  }
</style>
