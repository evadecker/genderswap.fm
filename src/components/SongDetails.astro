---
import type { Database } from "../db-generated.types";
import type { Tables } from "../types";
import Icon from "./Icon.astro";
import Tag from "./Tag.astro";

type Props = {
  type: "original" | "cover";
  song: Tables<"songs">;
  coveredAs?: string;
};

const { type, song, coveredAs } = Astro.props;
---

<div
  class:list={["track", { original: type === "original" }]}
  itemprop="track"
  itemscope
  itemtype="https://schema.org/MusicRecording"
>
  <a class="link" href={song.url} itemprop="url" aria-label="Open in Spotify">
    {
      song.album_img && (
        <img
          class="albumArt"
          src={song.album_img}
          alt={`${song.album_name} album art`}
          itemprop="image"
        />
      )
    }
    <div class="album-overlay">
      <Tag
        text={type === "original" ? "Listen to original" : "Listen to cover"}
      />
      <Icon icon="spotify" variant="filled" />
    </div>
  </a>
  <div class="details">
    <h2 class="artist" itemprop="byArtist">{song.artists.join(", ")}</h2>
    <div class="album" itemprop="inAlbum">
      <em>{song.album_name}</em>, <time class="year" itemprop="datePublished"
        >{song.album_year}</time
      >
    </div>
    {
      coveredAs && (
        <div class="coveredAs" itemprop="name">
          Covered as “{coveredAs}”
        </div>
      )
    }
  </div>
</div>

<style lang="scss">
  .track {
    display: flex;
    flex-direction: column;
    flex-shrink: 0;
    padding-inline: var(--space-s);
    width: clamp(100px, 50vw, 600px);

    &.original {
      text-align: right;
      align-items: flex-end;
      width: clamp(80px, 40vw, 480px);
    }
  }

  .details {
    padding-block: var(--space-s);
  }

  .artist {
    font-size: var(--step-3);
  }

  .album {
    font-size: var(--step-1);
  }

  .album-overlay {
    position: absolute;
    left: var(--space-xs);
    bottom: var(--space-xs);
    transition: opacity var(--transition-duration) ease-in-out;
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
    justify-content: center;
    gap: var(--space-2xs);
    color: var(--white-a11);
    font-size: var(--step-2);
    opacity: 0;
    transition: 0.4s opacity ease;

    .original & {
      flex-direction: row;
      left: auto;
      right: var(--space-xs);
    }
  }

  .link {
    display: block;
    position: relative;
    font-size: var(--step-1);
    user-select: none;
    width: 100%;
    aspect-ratio: 1 / 1;
    background: var(--sand-3);
    overflow: hidden;
    border-radius: var(--radius-lg);
    transition: transform 0.3s ease;

    &:hover {
      transform: scale(1.05);

      .album-overlay {
        opacity: 1;
      }
    }
  }
</style>
